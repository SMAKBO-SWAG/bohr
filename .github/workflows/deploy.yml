name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and Push to Docker Image
#         run: |
#           docker buildx build \
#             --build-arg NODE_ENV=${{ secrets.NODE_ENV }} \
#             --build-arg MIDTRANS_CLIENT_KEY=${{ secrets.MIDTRANS_CLIENT_KEY }} \
#             --build-arg MIDTRANS_SNAP_SCRIPT=${{ secrets.MIDTRANS_SNAP_SCRIPT }} \
#             --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
#             -t "${{ secrets.DOCKER_USERNAME }}/bohr-app:latest" \
#             --push .

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Install SSH client
#         run: sudo apt-get install openssh-client

#       - name: Create SSH key
#         run: |
#           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh-key.pem
#           chmod 400 ssh-key.pem

#       - name: Deploy to GCP
#         run: |
#           ssh -o StrictHostKeyChecking=no -i ssh-key.pem "${{ secrets.GCP_VM_USERNAME }}"@"${{ secrets.GCP_VM_IP }}" "
#             sudo docker pull "${{ secrets.DOCKER_USERNAME }}/bohr-app:latest"
#             sudo docker stop bohr-app-container || true
#             sudo docker rm bohr-app-container || true
#             sudo docker run -d --name bohr-app-container -p 3000:3000 "${{ secrets.DOCKER_USERNAME }}/bohr-app:latest""
